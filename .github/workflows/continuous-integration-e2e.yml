name: E2E Tests

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  e2e:
    name: '${{ matrix.browser }} - WP ${{ matrix.wp }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - browser: 'chrome'
            wp: 'latest'
            snapshots: true

          - browser: 'chrome'
            wp: '5.3.6'
            snapshots: false
    env:
      WP_BASE_URL: http://localhost:8899

    steps:
      - name: Checkout
        uses: actions/checkout@v2

        # See https://github.com/WordPress/gutenberg/issues/22398
      - name: Install libkrb5-dev
        run: sudo apt-get install libkrb5-dev

        # See https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
      - name: Install libgbm1
        run: sudo apt-get install libgbm1

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Setup npm cache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          snapshots: none
          tools: composer:v1

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer cache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          npm ci
          composer install --prefer-dist --no-suggest --no-progress --no-interaction
        env:
          CI: true
          PUPPETEER_PRODUCT: ${{ matrix.browser }}

      - name: Build plugin
        run: npm run build:js
        env:
          # TODO: remove eventually
          DISABLE_PREVENT: true

      - name: Configure WordPress version
        run: |
          if [[ $WP_VERSION == 'master' ]]; then
            echo "Using WordPress version: $WP_VERSION"

            echo "{\"core\":\"WordPress/WordPress#${WP_VERSION}\"}" >> .wp-env.override.json
            exit 0
          fi

          if [[ $WP_VERSION == 'latest' ]]; then
            LATEST_VERSION=$(curl -s http://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers[0].version')
            if [[ -z "$LATEST_VERSION" ]]; then
              echo "Latest WordPress version could not be found"
              exit 1
            fi

            echo "Found latest WordPress version: $LATEST_VERSION"
            WP_VERSION=$LATEST_VERSION
          fi

          echo "Using WordPress version: $WP_VERSION"

          echo "{\"core\":\"WordPress/WordPress#tags/${WP_VERSION}\"}" >> .wp-env.override.json
        env:
          WP_VERSION: ${{ matrix.wp }}

      - name: Start Docker environment
        run: |
          chmod -R 767 ./
          npm run wp-env start -- --update --debug

      - name: Prepare E2E tests
        run: npm run test:e2e:prepare

      - name: Run E2E tests with percy
        run: npm run test:e2e:percy
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E }}
          PUPPETEER_PRODUCT: ${{ matrix.browser }}
        if: ( matrix.snapshots ) && ( github.event.pull_request.draft == false )

      - name: Run E2E tests
        run: npm run test:e2e
        if: ( ! matrix.snapshots ) || ( github.event.pull_request.draft == true )

      - name: Stop Docker environment
        run: npm run wp-env stop
        if: ${{ success() || failure() }}
