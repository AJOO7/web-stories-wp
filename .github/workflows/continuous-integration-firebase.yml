name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - static-site

jobs:
  deploy-firebase:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: static-site

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Setup npm cache
        uses: pat-s/always-upload-cache@v2.1.0
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          (cd web-stories-scraper && npm ci)
          (cd sitemap-generator && npm ci)
        env:
          CI: true

      - name: Download Web Stories
        run: cat ./stories.txt | xargs -I{} node ./web-stories-scraper/index.js {} ./public/stories/

      - name: Undo changes to local stories
        run: git checkout public/stories/**/*.html

      - name: Compress Images
        uses: calibreapp/image-actions@1.1.0
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          compressOnly: true
          ignorePaths: 'node_modules/**,build'

      - name: Build XML Sitemap
        run: node ./sitemap-generator/index.js ./public/sitemap.xml

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v1.5.0
        with:
          args: deploy --only hosting -m 'Automated deploy from GitHub Actions'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
